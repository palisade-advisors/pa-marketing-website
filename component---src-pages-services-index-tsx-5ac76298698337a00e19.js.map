{"version":3,"file":"component---src-pages-services-index-tsx-5ac76298698337a00e19.js","mappings":"+IAMIA,GAAiB,E,QAAA,GAAqB,cAAe,iBAAkB,CACzE,CAAC,OAAQ,CAAEC,EAAG,aAAcC,IAAK,UACjC,CAAC,OAAQ,CAAED,EAAG,cAAeC,IAAK,UAClC,CAAC,OAAQ,CAAED,EAAG,YAAaC,IAAK,Y,SCMnB,SAASC,EAAYC,GAIb,IAJc,KACnCC,EAAI,KACJC,EAAI,QACJC,GACkBH,EAClB,OAAIE,EAEAE,EAAAC,cAAA,KACEC,UAAU,uHACVJ,KAAMA,GAELD,EACDG,EAAAC,cAACT,EAAc,CAACU,UAAU,wFAK9BF,EAAAC,cAAA,UACEC,UAAU,uHACVH,QAASA,GAERF,EACDG,EAAAC,cAACT,EAAc,CAACU,UAAU,uFAGhC,C,2FC7BA,SAASC,IAAkC,IAAD,IAAAC,EAAAC,UAAAC,OAAnBC,EAAO,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAPF,EAAOE,GAAAJ,UAAAI,GAC5B,OAAOF,EAAQG,OAAOC,SAASC,KAAK,IACtC,CAEe,SAASC,EAAWjB,GAOb,IAPc,KAClCkB,EAAI,YACJC,EAAW,MACXC,EAAK,MACLC,EAAQ,OAAM,QACdC,EAAO,QACPC,GACiBvB,EACjB,OAAKoB,EAaHhB,EAAAC,cAAA,OACEC,UAAWC,EACT,0DACU,SAAVc,EAAmB,cAAgB,wBAGrCjB,EAAAC,cAAA,OAAKC,UAAU,uCACbF,EAAAC,cAAA,MAAIC,UAAU,qDACXY,GAEHd,EAAAC,cAAA,SAAIc,GACHG,GAAWC,GAAWnB,EAAAC,cAACN,EAAAA,EAAY,CAACE,KAAMqB,EAASpB,KAAMqB,KAE5DnB,EAAAC,cAAA,OAAKC,UAAU,sDACZc,GACChB,EAAAC,cAAA,OAAKmB,IAAKJ,EAAOK,IAAKP,EAAMZ,UAAU,iCA1B1CF,EAAAC,cAAA,OAAKC,UAAU,uCACbF,EAAAC,cAAA,MAAIC,UAAU,qDACXY,GAEHd,EAAAC,cAAA,SAAIc,GACHG,GAAWC,GAAWnB,EAAAC,cAACN,EAAAA,EAAY,CAACE,KAAMqB,EAASpB,KAAMqB,IA0BlE,C,oCCrDe,SAASG,IACtB,MAAMC,ECOO,WACb,MAAMC,GAAOC,EAAAA,EAAAA,IAAe,cAuB5B,OALcC,EAAAA,EAAAA,UACZ,IAAMF,EAAKG,qBAAqBC,MAAMC,WACtC,CAACL,EAAKG,qBAAqBC,QAGhBE,KAAKC,IAAS,IAAAC,EAAA,MAAM,CAC/BlB,KAAMiB,EAAKjB,KACXC,YAAagB,EAAKhB,YAAYA,YAC9BC,MAAiB,QAAZgB,EAAED,EAAKf,aAAK,IAAAgB,OAAA,EAAVA,EAAYC,IACnBC,iBAAkBH,EAAKG,iBACvBC,iBAAkBJ,EAAKI,iBACxB,GACH,CDtCmBC,GACjB,OACEpC,EAAAC,cAAA,WAASC,UAAU,yFAChBqB,EAASO,KAAI,CAACO,EAASC,IACtBtC,EAAAC,cAACY,EAAW0B,OAAAC,OAAA,GACNH,EAAO,CACXpB,MAAOqB,EAAM,EAAI,OAAS,QAC1B5C,IAAK2C,EAAQvB,UAKvB,C","sources":["webpack://cw-gatsby/./node_modules/.pnpm/@tabler+icons-react@2.46.0_react@18.2.0/node_modules/@tabler/icons-react/dist/esm/icons/IconArrowRight.js","webpack://cw-gatsby/./src/components/CallToAction.tsx","webpack://cw-gatsby/./src/components/ServiceItem.tsx","webpack://cw-gatsby/./src/pages/services/index.tsx","webpack://cw-gatsby/./src/hooks/use-service-data.ts"],"sourcesContent":["/**\n * @tabler/icons-react v2.46.0 - MIT\n */\n\nimport createReactComponent from '../createReactComponent.js';\n\nvar IconArrowRight = createReactComponent(\"arrow-right\", \"IconArrowRight\", [\n  [\"path\", { d: \"M5 12l14 0\", key: \"svg-0\" }],\n  [\"path\", { d: \"M13 18l6 -6\", key: \"svg-1\" }],\n  [\"path\", { d: \"M13 6l6 6\", key: \"svg-2\" }]\n]);\n\nexport { IconArrowRight as default };\n//# sourceMappingURL=IconArrowRight.js.map\n","import { IconArrowRight } from \"@tabler/icons-react\";\n\ntype CallToActionProps = {\n  text: string;\n} & (\n  | {\n      href?: never;\n      onClick: () => void;\n    }\n  | {\n      href: string;\n      onClick?: never;\n    }\n);\n\nexport default function CallToAction({\n  text,\n  href,\n  onClick,\n}: CallToActionProps) {\n  if (href)\n    return (\n      <a\n        className=\"group font-medium text-lg hover:text-pa-orange transition-all duration-300 ease-out flex items-center cursor-pointer\"\n        href={href}\n      >\n        {text}\n        <IconArrowRight className=\"ml-2 text-pa-orange group-hover:translate-x-2 transition-all ease-out duration-300\" />\n      </a>\n    );\n\n  return (\n    <button\n      className=\"group font-medium text-lg hover:text-pa-orange transition-all duration-300 ease-out flex items-center cursor-pointer\"\n      onClick={onClick}\n    >\n      {text}\n      <IconArrowRight className=\"ml-2 text-pa-orange group-hover:translate-x-2 transition-all ease-out duration-300\" />\n    </button>\n  );\n}\n","import CallToAction from \"./CallToAction\";\n\ninterface ServiceItemProps {\n  name: string;\n  description: string;\n  image?: string;\n  align?: \"left\" | \"right\";\n  ctaText?: string | null;\n  ctaLink?: string | null;\n}\n\nfunction classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport default function ServiceItem({\n  name,\n  description,\n  image,\n  align = \"left\",\n  ctaText,\n  ctaLink,\n}: ServiceItemProps) {\n  if (!image) {\n    return (\n      <div className=\"flex flex-col w-full md:w-1/2 gap-4\">\n        <h1 className=\"text-4xl font-serif font-semibold text-pa-primary\">\n          {name}\n        </h1>\n        <p>{description}</p>\n        {ctaText && ctaLink && <CallToAction text={ctaText} href={ctaLink} />}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={classNames(\n        \"flex w-full items-center gap-12 py-12 border-b flex-col\",\n        align === \"left\" ? \"md:flex-row\" : \"md:flex-row-reverse\"\n      )}\n    >\n      <div className=\"flex flex-col w-full md:w-1/2 gap-4\">\n        <h1 className=\"text-4xl font-serif font-semibold text-pa-primary\">\n          {name}\n        </h1>\n        <p>{description}</p>\n        {ctaText && ctaLink && <CallToAction text={ctaText} href={ctaLink} />}\n      </div>\n      <div className=\"flex flex-col w-full md:w-1/2 h-[50vh] bg-pa-green\">\n        {image && (\n          <img src={image} alt={name} className=\"object-cover h-full w-full\" />\n        )}\n      </div>\n    </div>\n  );\n}\n","import ServiceItem from \"../../components/ServiceItem\";\nimport useServiceData from \"../../hooks/use-service-data\";\n\nexport default function ServicesPage() {\n  const services = useServiceData();\n  return (\n    <section className=\"flex flex-col w-full min-h-[calc(100vh-96px)] px-4 md:px-12 items-center gap-12 pb-24\">\n      {services.map((service, idx) => (\n        <ServiceItem\n          {...service}\n          align={idx % 2 ? \"left\" : \"right\"}\n          key={service.name}\n        />\n      ))}\n    </section>\n  );\n}\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport { useMemo } from \"react\";\n\nexport interface ServiceData {\n  name: string;\n  description: string;\n  image?: string;\n  callToActionText: string | null;\n  callToActionLink: string | null;\n}\n\nexport default function useServiceData() {\n  const data = useStaticQuery(graphql`\n    query {\n      allContentfulService {\n        nodes {\n          callToActionLink\n          callToActionText\n          description {\n            description\n          }\n          image {\n            url\n          }\n          name\n        }\n      }\n    }\n  `);\n\n  const nodes = useMemo(\n    () => data.allContentfulService.nodes.reverse(),\n    [data.allContentfulService.nodes]\n  );\n\n  return nodes.map((node: any) => ({\n    name: node.name,\n    description: node.description.description,\n    image: node.image?.url,\n    callToActionText: node.callToActionText,\n    callToActionLink: node.callToActionLink,\n  })) as ServiceData[];\n}\n"],"names":["IconArrowRight","d","key","CallToAction","_ref","text","href","onClick","React","createElement","className","classNames","_len","arguments","length","classes","Array","_key","filter","Boolean","join","ServiceItem","name","description","image","align","ctaText","ctaLink","src","alt","ServicesPage","services","data","useStaticQuery","useMemo","allContentfulService","nodes","reverse","map","node","_node$image","url","callToActionText","callToActionLink","useServiceData","service","idx","Object","assign"],"sourceRoot":""}